{%- liquid
  if "ar he he-IL hi" contains localization.language.iso_code
    assign rtl = '-rtl'
  endif
-%}
{{ 'component-rte.css' | asset_url | stylesheet_tag }}
<style>
	:root {
		--coming-soon-color: var(--text-color);
		--coming-soon-link-color: var(--body-link-secondary-color);
		--coming-soon-link-hover-color: var(--body-link-secondary-color-hover);
		--coming-soon-title-color: var(--custom-color);
		--coming-soon-bg1: var(--body-bg);
		--coming-soon-bg2: none;
		--coming-social-color: var(--custom-color);
		--coming-social-hover-color: var(--text-color);
		--coming-clock-indicator-color: var(--decor-border-middle-color);
		--coming-clock-indicator-active-color: var(--custom-color);
		--coming-clock-indicator-opacity: 1;
	}
</style>
<style>
  /* {%- if section.settings.style == 'classic' -%}
    :root {
      --coming-soon-color: #414C55;
      --coming-soon-title-color: #0067ff;
      --coming-soon-bg1: #E5E5E5;
      --coming-soon-bg2: none;
      --coming-social-color: #0067ff;
      --coming-social-hover-color: #414C55;
      --coming-button-hover-bg: #0067ff;
      --coming-clock-indicator-color: #ccc;
      --coming-clock-indicator-active-color: #0067ff;
      --coming-clock-indicator-opacity: 1;
    }
  {%- else -%}
    :root {
      --coming-soon-color: #fff;
      --coming-soon-title-color: #fff;
      --coming-soon-bg1: #2364CC;
      --coming-soon-bg2: #B171BF;
      --coming-social-color: #fff;
      --coming-social-hover-color: #EDF1FF;
      --coming-button-hover-bg: #2D8BED;
      --coming-clock-indicator-color: #fff;
      --coming-clock-indicator-active-color: #fff;
      --coming-clock-indicator-opacity: 0.44;
    }
  {%- endif -%} */
</style>
{{ 'coming-soon' | append: rtl | append: '.css' | asset_url | stylesheet_tag }}
<main-password>
  <style>
      * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
     
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
            background: linear-gradient(135deg, #0f172a 0%, #0f1419 50%, #0f172a 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
            position: relative;
            overflow: hidden;
        }

        /* Background decorative elements */
        .bg-decoration {
            position: absolute;
            inset: 0;
            overflow: hidden;
            pointer-events: none;
        }

        .bg-decoration::before {
            content: '';
            position: absolute;
            top: 0;
            left: 25%;
            width: 24rem;
            height: 24rem;
            background: rgba(30, 41, 59, 0.2);
            border-radius: 50%;
            filter: blur(120px);
        }

        .bg-decoration::after {
            content: '';
            position: absolute;
            bottom: 0;
            right: 25%;
            width: 24rem;
            height: 24rem;
            background: rgba(30, 41, 59, 0.2);
            border-radius: 50%;
            filter: blur(120px);
        }

        .container {
            position: relative;
            width: 100%;
            max-width: 28rem;
            z-index: 10;
        }

        .card {
            border: 1px solid rgba(71, 85, 105, 0.5);
            border-radius: 1rem;
            background: rgba(15, 23, 42, 0.4);
            backdrop-filter: blur(4px);
            padding: 2rem;
        }

        @media (min-width: 768px) {
            .card {
                padding: 3rem;
            }
        }

        /* Logo */
        .logo {
            text-align: center;
            margin-bottom: 0.5rem;
        }

        .logo-main {
            font-size: 2.25rem;
            font-weight: 300;
            letter-spacing: 0.15em;
            color: #ffffff;
            margin-bottom: 0.5rem;
        }

        @media (min-width: 768px) {
            .logo-main {
                font-size: 3rem;
            }
        }

        .logo-sub {
            font-size: 0.875rem;
            letter-spacing: 0.2em;
            color: #94a3b8;
        }

        /* Heading */
        .heading {
            text-align: center;
            margin-bottom: 2rem;
        }

        .heading-title {
            font-size: 1.5rem;
            font-weight: 300;
            letter-spacing: 0.05em;
            color: #ffffff;
            margin-bottom: 0.75rem;
        }

        @media (min-width: 768px) {
            .heading-title {
                font-size: 1.875rem;
            }
        }

        .heading-subtitle {
            font-size: 0.875rem;
            color: #cbd5e1;
            line-height: 1.5;
        }

        /* Form */
        form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .input-group {
            position: relative;
            margin-top: 20px;
        }

        .input-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #94a3b8;
            width: 20px;
            height: 20px;
        }

        input {
            width: 100%;
            background: rgba(30, 41, 59, 0.5);
            border: 1px solid rgba(71, 85, 105, 0.5);
            border-radius: 0.5rem;
            padding: 0.75rem 1rem 0.75rem 3rem;
            color: #ffffff;
            font-size: 1rem;
            transition: all 0.2s ease;
        }

        input::placeholder {
            color: #64748b;
        }

        input:focus {
            outline: none;
            border-color: #475569;
            box-shadow: 0 0 0 1px #475569;
        }

        .button {
            width: 100%;
            background: #d4c5b9;
            color: #0f172a;
            border: none;
            border-radius: 0.5rem;
            padding: 0.75rem;
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            transition: background 0.2s ease;
            margin-top: 1.5rem;
        }

        .button:hover {
            background: #e8ddd5;
        }

        /* Terms text */
        .terms {
            text-align: center;
            font-size: 0.75rem;
            color: #64748b;
            margin-bottom: 2rem;
        }

        .terms a {
            color: #cbd5e1;
            text-decoration: none;
            transition: color 0.2s ease;
        }

        .terms a:hover {
            color: #ffffff;
        }

        /* Social section */
        .social-section {
            border-top: 1px solid rgba(71, 85, 105, 0.5);
            padding-top: 2rem;
        }

        .social-label {
            text-align: center;
            font-size: 0.75rem;
            letter-spacing: 0.2em;
            color: #64748b;
            margin-bottom: 1rem;
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
        }

        .social-links a {
            color: #64748b;
            text-decoration: none;
            transition: color 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .social-links a:hover {
            color: #ffffff;
        }

        .social-links svg {
            width: 1.5rem;
            height: 1.5rem;
        }

        /* Footer links */
        .footer-links {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(71, 85, 105, 0.5);
            font-size: 0.75rem;
            letter-spacing: 0.2em;
        }

        .footer-links a {
            color: #64748b;
            text-decoration: none;
            transition: color 0.2s ease;
        }

        .footer-links a:hover {
            color: #ffffff;
        }
    </style>
    <div class="container">
        <div class="card">
            <!-- Logo -->
            <div class="logo">
                <img src="https://creedlabel.com/cdn/shop/files/creed-logo.png?v=1756047856&width=139" alt="">
            </div>

            <!-- Heading -->
            <div class="heading">
                <h2 class="heading-title">JOIN THE AWAKENING</h2>
                <p class="heading-subtitle">
                    Early access. Product drops<br>
                    Movement, refined.
                </p>
            </div>
            <div id="mc_embed_shell">
                <div id="mc_embed_signup">
                    <form
                        action="https://creedlabel.us15.list-manage.com/subscribe/post?u=7c1b8e51edfd1289516641429&amp;id=cbd768444f&amp;f_id=0088c2e1f0"
                        method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate"
                        target="_blank">
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <div class="input-group">
                                    <svg class="input-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z">
                                        </path>
                                    </svg>
                                    <input type="text" placeholder="User name" name="FNAME" class="required text"
                                        id="mce-FNAME" required="" value="">
                                </div>
                            </div>
                            <div class="input-group">
                                <svg class="input-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z">
                                    </path>
                                </svg>
                                <input type="email" name="EMAIL" class="required email" id="mce-EMAIL" value=""
                                    placeholder="Email" required="">
                            </div>

                            <div id="mce-responses" class="clear foot">
                                <div class="response" id="mce-error-response" style="display: none; color:wheat;"></div>
                                <div class="response" id="mce-success-response" style="display: none;  color:wheat;"></div>
                            </div>
                            <div aria-hidden="true" style="position: absolute; left: -5000px;">
                                /* real people should not fill this in and expect good things - do not remove this or
                                risk form bot signups */
                                <input type="text" name="b_7c1b8e51edfd1289516641429_cbd768444f" tabindex="-1" value="">
                            </div>
                            <div class="optionalParent">
                                <div class="clear foot">
                                    <input type="submit" name="subscribe" id="mc-embedded-subscribe" class="button"
                                        value="Sign Up">
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <script type="text/javascript" src="//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js"></script>
                <script type="text/javascript">(function ($) { window.fnames = new Array(); window.ftypes = new Array(); fnames[1] = 'FNAME'; ftypes[1] = 'text'; fnames[0] = 'EMAIL'; ftypes[0] = 'email'; fnames[2] = 'LNAME'; ftypes[2] = 'text'; fnames[3] = 'ADDRESS'; ftypes[3] = 'address'; fnames[4] = 'PHONE'; ftypes[4] = 'phone'; fnames[5] = 'BIRTHDAY'; ftypes[5] = 'birthday'; fnames[6] = 'COMPANY'; ftypes[6] = 'text'; }(jQuery)); var $mcj = jQuery.noConflict(true);
                    // SMS Phone Multi-Country Functionality
                    if (!window.MC) {
                        window.MC = {};
                    }
                    window.MC.smsPhoneData = {
                        defaultCountryCode: 'AU',
                        programs: [],
                        smsProgramDataCountryNames: []
                    };

                    function getCountryUnicodeFlag(countryCode) {
                        return countryCode.toUpperCase().replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))
                    };

                    // HTML sanitization function to prevent XSS
                    function sanitizeHtml(str) {
                        if (typeof str !== 'string') return '';
                        return str
                            .replace(/&/g, '&amp;')
                            .replace(/</g, '&lt;')
                            .replace(/>/g, '&gt;')
                            .replace(/"/g, '&quot;')
                            .replace(/'/g, '&#x27;')
                            .replace(/\//g, '&#x2F;');
                    }

                    // URL sanitization function to prevent javascript: and data: URLs
                    function sanitizeUrl(url) {
                        if (typeof url !== 'string') return '';
                        const trimmedUrl = url.trim().toLowerCase();
                        if (trimmedUrl.startsWith('javascript:') || trimmedUrl.startsWith('data:') || trimmedUrl.startsWith('vbscript:')) {
                            return '#';
                        }
                        return url;
                    }

                    const getBrowserLanguage = () => {
                        if (!window?.navigator?.language?.split('-')[1]) {
                            return window?.navigator?.language?.toUpperCase();
                        }
                        return window?.navigator?.language?.split('-')[1];
                    };

                    function getDefaultCountryProgram(defaultCountryCode, smsProgramData) {
                        if (!smsProgramData || smsProgramData.length === 0) {
                            return null;
                        }

                        const browserLanguage = getBrowserLanguage();

                        if (browserLanguage) {
                            const foundProgram = smsProgramData.find(
                                (program) => program?.countryCode === browserLanguage,
                            );
                            if (foundProgram) {
                                return foundProgram;
                            }
                        }

                        if (defaultCountryCode) {
                            const foundProgram = smsProgramData.find(
                                (program) => program?.countryCode === defaultCountryCode,
                            );
                            if (foundProgram) {
                                return foundProgram;
                            }
                        }

                        return smsProgramData[0];
                    }

                    function updateSmsLegalText(countryCode, fieldName) {
                        if (!countryCode || !fieldName) {
                            return;
                        }

                        const programs = window?.MC?.smsPhoneData?.programs;
                        if (!programs || !Array.isArray(programs)) {
                            return;
                        }

                        const program = programs.find(program => program?.countryCode === countryCode);
                        if (!program || !program.requiredTemplate) {
                            return;
                        }

                        const legalTextElement = document.querySelector('#legal-text-' + fieldName);
                        if (!legalTextElement) {
                            return;
                        }

                        // Remove HTML tags and clean up the text
                        const divRegex = new RegExp('</?[div][^>]*>', 'gi');
                        const fullAnchorRegex = new RegExp('<a.*?</a>', 'g');
                        const anchorRegex = new RegExp('<a href="(.*?)" target="(.*?)">(.*?)</a>');

                        const requiredLegalText = program.requiredTemplate
                            .replace(divRegex, '')
                            .replace(fullAnchorRegex, '')
                            .slice(0, -1);

                        const anchorMatches = program.requiredTemplate.match(anchorRegex);

                        if (anchorMatches && anchorMatches.length >= 4) {
                            // Create link element safely using DOM methods instead of innerHTML
                            const linkElement = document.createElement('a');
                            linkElement.href = sanitizeUrl(anchorMatches[1]);
                            linkElement.target = sanitizeHtml(anchorMatches[2]);
                            linkElement.textContent = sanitizeHtml(anchorMatches[3]);

                            legalTextElement.textContent = requiredLegalText + ' ';
                            legalTextElement.appendChild(linkElement);
                            legalTextElement.appendChild(document.createTextNode('.'));
                        } else {
                            legalTextElement.textContent = requiredLegalText + '.';
                        }
                    }

                    function generateDropdownOptions(smsProgramData) {
                        if (!smsProgramData || smsProgramData.length === 0) {
                            return '';
                        }

                        return smsProgramData.map(program => {
                            const flag = getCountryUnicodeFlag(program.countryCode);
                            const countryName = getCountryName(program.countryCode);
                            const callingCode = program.countryCallingCode || '';
                            // Sanitize all values to prevent XSS
                            const sanitizedCountryCode = sanitizeHtml(program.countryCode || '');
                            const sanitizedCountryName = sanitizeHtml(countryName || '');
                            const sanitizedCallingCode = sanitizeHtml(callingCode || '');
                            return '<option value="' + sanitizedCountryCode + '">' + sanitizedCountryName + ' ' + sanitizedCallingCode + '</option>';
                        }).join('');
                    }

                    function getCountryName(countryCode) {
                        if (window.MC?.smsPhoneData?.smsProgramDataCountryNames && Array.isArray(window.MC.smsPhoneData.smsProgramDataCountryNames)) {
                            for (let i = 0; i < window.MC.smsPhoneData.smsProgramDataCountryNames.length; i++) {
                                if (window.MC.smsPhoneData.smsProgramDataCountryNames[i].code === countryCode) {
                                    return window.MC.smsPhoneData.smsProgramDataCountryNames[i].name;
                                }
                            }
                        }
                        return countryCode;
                    }

                    function getDefaultPlaceholder(countryCode) {
                        if (!countryCode || typeof countryCode !== 'string') {
                            return '+1 000 000 0000'; // Default US placeholder
                        }

                        const mockPlaceholders = [
                            {
                                countryCode: 'US',
                                placeholder: '+1 000 000 0000',
                                helpText: 'Include the US country code +1 before the phone number',
                            },
                            {
                                countryCode: 'GB',
                                placeholder: '+44 0000 000000',
                                helpText: 'Include the GB country code +44 before the phone number',
                            },
                            {
                                countryCode: 'CA',
                                placeholder: '+1 000 000 0000',
                                helpText: 'Include the CA country code +1 before the phone number',
                            },
                            {
                                countryCode: 'AU',
                                placeholder: '+61 000 000 000',
                                helpText: 'Include the AU country code +61 before the phone number',
                            },
                            {
                                countryCode: 'DE',
                                placeholder: '+49 000 0000000',
                                helpText: 'Fügen Sie vor der Telefonnummer die DE-Ländervorwahl +49 ein',
                            },
                            {
                                countryCode: 'FR',
                                placeholder: '+33 0 00 00 00 00',
                                helpText: 'Incluez le code pays FR +33 avant le numéro de téléphone',
                            },
                            {
                                countryCode: 'ES',
                                placeholder: '+34 000 000 000',
                                helpText: 'Incluya el código de país ES +34 antes del número de teléfono',
                            },
                            {
                                countryCode: 'NL',
                                placeholder: '+31 0 00000000',
                                helpText: 'Voeg de NL-landcode +31 toe vóór het telefoonnummer',
                            },
                            {
                                countryCode: 'BE',
                                placeholder: '+32 000 00 00 00',
                                helpText: 'Incluez le code pays BE +32 avant le numéro de téléphone',
                            },
                            {
                                countryCode: 'CH',
                                placeholder: '+41 00 000 00 00',
                                helpText: 'Fügen Sie vor der Telefonnummer die CH-Ländervorwahl +41 ein',
                            },
                            {
                                countryCode: 'AT',
                                placeholder: '+43 000 000 0000',
                                helpText: 'Fügen Sie vor der Telefonnummer die AT-Ländervorwahl +43 ein',
                            },
                            {
                                countryCode: 'IE',
                                placeholder: '+353 00 000 0000',
                                helpText: 'Include the IE country code +353 before the phone number',
                            },
                            {
                                countryCode: 'IT',
                                placeholder: '+39 000 000 0000',
                                helpText:
                                    'Includere il prefisso internazionale IT +39 prima del numero di telefono',
                            },
                        ];

                        const selectedPlaceholder = mockPlaceholders.find(function (item) {
                            return item && item.countryCode === countryCode;
                        });

                        return selectedPlaceholder ? selectedPlaceholder.placeholder : mockPlaceholders[0].placeholder;
                    }

                    function updatePlaceholder(countryCode, fieldName) {
                        if (!countryCode || !fieldName) {
                            return;
                        }

                        const phoneInput = document.querySelector('#mce-' + fieldName);
                        if (!phoneInput) {
                            return;
                        }

                        const placeholder = getDefaultPlaceholder(countryCode);
                        if (placeholder) {
                            phoneInput.placeholder = placeholder;
                        }
                    }

                    function updateCountryCodeInstruction(countryCode, fieldName) {
                        updatePlaceholder(countryCode, fieldName);

                    }

                    function getDefaultHelpText(countryCode) {
                        const mockPlaceholders = [
                            {
                                countryCode: 'US',
                                placeholder: '+1 000 000 0000',
                                helpText: 'Include the US country code +1 before the phone number',
                            },
                            {
                                countryCode: 'GB',
                                placeholder: '+44 0000 000000',
                                helpText: 'Include the GB country code +44 before the phone number',
                            },
                            {
                                countryCode: 'CA',
                                placeholder: '+1 000 000 0000',
                                helpText: 'Include the CA country code +1 before the phone number',
                            },
                            {
                                countryCode: 'AU',
                                placeholder: '+61 000 000 000',
                                helpText: 'Include the AU country code +61 before the phone number',
                            },
                            {
                                countryCode: 'DE',
                                placeholder: '+49 000 0000000',
                                helpText: 'Fügen Sie vor der Telefonnummer die DE-Ländervorwahl +49 ein',
                            },
                            {
                                countryCode: 'FR',
                                placeholder: '+33 0 00 00 00 00',
                                helpText: 'Incluez le code pays FR +33 avant le numéro de téléphone',
                            },
                            {
                                countryCode: 'ES',
                                placeholder: '+34 000 000 000',
                                helpText: 'Incluya el código de país ES +34 antes del número de teléfono',
                            },
                            {
                                countryCode: 'NL',
                                placeholder: '+31 0 00000000',
                                helpText: 'Voeg de NL-landcode +31 toe vóór het telefoonnummer',
                            },
                            {
                                countryCode: 'BE',
                                placeholder: '+32 000 00 00 00',
                                helpText: 'Incluez le code pays BE +32 avant le numéro de téléphone',
                            },
                            {
                                countryCode: 'CH',
                                placeholder: '+41 00 000 00 00',
                                helpText: 'Fügen Sie vor der Telefonnummer die CH-Ländervorwahl +41 ein',
                            },
                            {
                                countryCode: 'AT',
                                placeholder: '+43 000 000 0000',
                                helpText: 'Fügen Sie vor der Telefonnummer die AT-Ländervorwahl +43 ein',
                            },
                            {
                                countryCode: 'IE',
                                placeholder: '+353 00 000 0000',
                                helpText: 'Include the IE country code +353 before the phone number',
                            },
                            {
                                countryCode: 'IT',
                                placeholder: '+39 000 000 0000',
                                helpText: 'Includere il prefisso internazionale IT +39 prima del numero di telefono',
                            },
                        ];

                        if (!countryCode || typeof countryCode !== 'string') {
                            return mockPlaceholders[0].helpText;
                        }

                        const selectedHelpText = mockPlaceholders.find(function (item) {
                            return item && item.countryCode === countryCode;
                        });

                        return selectedHelpText ? selectedHelpText.helpText : mockPlaceholders[0].helpText;
                    }

                    function setDefaultHelpText(countryCode) {
                        const helpTextSpan = document.querySelector('#help-text');
                        if (!helpTextSpan) {
                            return;
                        }


                    }

                    function updateHelpTextCountryCode(countryCode, fieldName) {
                        if (!countryCode || !fieldName) {
                            return;
                        }

                        setDefaultHelpText(countryCode);
                    }

                    function initializeSmsPhoneDropdown(fieldName) {
                        if (!fieldName || typeof fieldName !== 'string') {
                            return;
                        }

                        const dropdown = document.querySelector('#country-select-' + fieldName);
                        const displayFlag = document.querySelector('#flag-display-' + fieldName);

                        if (!dropdown || !displayFlag) {
                            return;
                        }

                        const smsPhoneData = window.MC?.smsPhoneData;
                        if (smsPhoneData && smsPhoneData.programs && Array.isArray(smsPhoneData.programs)) {
                            dropdown.innerHTML = generateDropdownOptions(smsPhoneData.programs);
                        }

                        const defaultProgram = getDefaultCountryProgram(smsPhoneData?.defaultCountryCode, smsPhoneData?.programs);
                        if (defaultProgram && defaultProgram.countryCode) {
                            dropdown.value = defaultProgram.countryCode;

                            const flagSpan = displayFlag?.querySelector('#flag-emoji-' + fieldName);
                            if (flagSpan) {
                                flagSpan.textContent = getCountryUnicodeFlag(defaultProgram.countryCode);
                                flagSpan.setAttribute('aria-label', sanitizeHtml(defaultProgram.countryCode) + ' flag');
                            }

                            updateSmsLegalText(defaultProgram.countryCode, fieldName);
                            updatePlaceholder(defaultProgram.countryCode, fieldName);
                            updateCountryCodeInstruction(defaultProgram.countryCode, fieldName);
                        }


                        var phoneInput = document.querySelector('#mce-' + fieldName);
                        if (phoneInput && defaultProgram.countryCallingCode) {
                            phoneInput.value = defaultProgram.countryCallingCode;
                        }



                        displayFlag?.addEventListener('click', function (e) {
                            dropdown.focus();
                        });


                        dropdown?.addEventListener('change', function () {
                            const selectedCountry = this.value;

                            if (!selectedCountry || typeof selectedCountry !== 'string') {
                                return;
                            }

                            const flagSpan = displayFlag?.querySelector('#flag-emoji-' + fieldName);
                            if (flagSpan) {
                                flagSpan.textContent = getCountryUnicodeFlag(selectedCountry);
                                flagSpan.setAttribute('aria-label', sanitizeHtml(selectedCountry) + ' flag');
                            }


                            const selectedProgram = window.MC?.smsPhoneData?.programs.find(function (program) {
                                return program && program.countryCode === selectedCountry;
                            });
                            var phoneInput = document.querySelector('#mce-' + fieldName);
                            if (phoneInput && selectedProgram.countryCallingCode) {
                                phoneInput.value = selectedProgram.countryCallingCode;
                            }


                            updateSmsLegalText(selectedCountry, fieldName);
                            updatePlaceholder(selectedCountry, fieldName);
                            updateCountryCodeInstruction(selectedCountry, fieldName);
                        });
                    }

                    document.addEventListener('DOMContentLoaded', function () {
                        const smsPhoneFields = document.querySelectorAll('[id^="country-select-"]');

                        smsPhoneFields.forEach(function (dropdown) {
                            const fieldName = dropdown?.id.replace('country-select-', '');
                            initializeSmsPhoneDropdown(fieldName);
                        });
                    });
                </script>
            </div>
            <!-- Terms text -->
            <p class="terms">
                By signing up, you agree to our <a href="#">Terms & Privacy</a>.
            </p>
            <!-- Social section -->
            <div class="social-section">
                <p class="social-label">FOLLOW CREED</p>
                <div class="social-links">
                    <a href="https://www.instagram.com/creedlabel/" aria-label="Instagram">
                        <svg fill="currentColor" viewBox="0 0 24 24">
                            <path
                                d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zM5.838 12a6.162 6.162 0 1 1 12.324 0 6.162 6.162 0 0 1-12.324 0zM12 16a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm4.965-10.322a1.44 1.44 0 1 1 2.881.001 1.44 1.44 0 0 1-2.881-.001z" />
                        </svg>
                    </a>
                    <a href="https://www.tiktok.com/@creedlabel" aria-label="TikTok">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="24" height="24"
                            fill="currentColor">
                            <path
                                d="M448,209.91a210.06,210.06,0,0,1-122.77-39.25V349.38A162.55,162.55,0,1,1,185,188.31V278.2a74.62,74.62,0,1,0,52.23,71.18V0h88a121.18,121.18,0,0,0,1.86,22.17A122.18,122.18,0,0,0,381,102.39a121.43,121.43,0,0,0,67,20.14Z" />
                        </svg>

                    </a>
                </div>
            </div>

            <!-- Footer links -->
            <div class="footer-links">
                <a href="#">PRIVACY</a>
                <a href="#">TERMS</a>
                <a href="#">CONTACT</a>
            </div>
        </div>
    </div>
</main-password>
{% schema %}
{
  "name": "Password page",
  "tag": "section",
  "class": "spaced-section spaced-section--full-width",
  "settings": [
    {
      "type": "select",
      "id": "style",
      "label": "Style",
      "options": [
        {
          "value": "classic",
          "label": "Classic"
        },
        {
          "value": "colorized",
          "label": "Colorized"
        }
      ],
      "default": "classic"
    },
    {
      "type": "checkbox",
      "id": "clock",
      "label": "Clock",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "Heading",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Opening soon",
          "label": "Heading"
        }
      ]
    },
    {
      "type": "paragraph",
      "name": "Paragraph",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Be the first to know when we launch.</p>",
          "label": "Description"
        }
      ]
    },
    {
      "type": "email_form",
      "name": "Email form",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Each email subscription creates a customer account. [Learn more](https://help.shopify.com/en/manual/customers)"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "heading"
      },
      {
        "type": "paragraph"
      },
      {
        "type": "email_form"
      }
    ]
  }
}
{% endschema %}
